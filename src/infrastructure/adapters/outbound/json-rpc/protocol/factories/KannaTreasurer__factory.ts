/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  KannaTreasurer,
  KannaTreasurerInterface,
} from '../KannaTreasurer';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_knnToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'signer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'date',
        type: 'uint256',
      },
    ],
    name: 'Release',
    type: 'event',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'release',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405234801561001057600080fd5b506040516108f93803806108f9833981810160405281019061003291906101b7565b61004e61004361008860201b60201c565b61009060201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506101e4565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018482610159565b9050919050565b61019481610179565b811461019f57600080fd5b50565b6000815190506101b18161018b565b92915050565b6000602082840312156101cd576101cc610154565b5b60006101db848285016101a2565b91505092915050565b6080516106fb6101fe600039600060bb01526106fb6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630357371d14610051578063715018a61461006d5780638da5cb5b14610077578063f2fde38b14610095575b600080fd5b61006b6004803603810190610066919061044b565b6100b1565b005b6100756101a7565b005b61007f6101bb565b60405161008c919061049a565b60405180910390f35b6100af60048036038101906100aa91906104b5565b6101e4565b005b6100b9610268565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016101149291906104f1565b602060405180830381600087803b15801561012e57600080fd5b505af1158015610142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101669190610552565b50427f10b55f01b1cfe0feeb7d144f66162661602d8e73256499b6d8342aac37ff067933848460405161019b9392919061057f565b60405180910390a25050565b6101af610268565b6101b960006102e6565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101ec610268565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561025c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025390610639565b60405180910390fd5b610265816102e6565b50565b6102706103aa565b73ffffffffffffffffffffffffffffffffffffffff1661028e6101bb565b73ffffffffffffffffffffffffffffffffffffffff16146102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db906106a5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103e2826103b7565b9050919050565b6103f2816103d7565b81146103fd57600080fd5b50565b60008135905061040f816103e9565b92915050565b6000819050919050565b61042881610415565b811461043357600080fd5b50565b6000813590506104458161041f565b92915050565b60008060408385031215610462576104616103b2565b5b600061047085828601610400565b925050602061048185828601610436565b9150509250929050565b610494816103d7565b82525050565b60006020820190506104af600083018461048b565b92915050565b6000602082840312156104cb576104ca6103b2565b5b60006104d984828501610400565b91505092915050565b6104eb81610415565b82525050565b6000604082019050610506600083018561048b565b61051360208301846104e2565b9392505050565b60008115159050919050565b61052f8161051a565b811461053a57600080fd5b50565b60008151905061054c81610526565b92915050565b600060208284031215610568576105676103b2565b5b60006105768482850161053d565b91505092915050565b6000606082019050610594600083018661048b565b6105a1602083018561048b565b6105ae60408301846104e2565b949350505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006106236026836105b6565b915061062e826105c7565b604082019050919050565b6000602082019050818103600083015261065281610616565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061068f6020836105b6565b915061069a82610659565b602082019050919050565b600060208201905081810360008301526106be81610682565b905091905056fea26469706673582212204faeaaa0e6e048ce48ea9dd7200334e0c02d336872c8c7e2c022509a77ae55f564736f6c63430008090033';

export class KannaTreasurer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _knnToken: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<KannaTreasurer> {
    return super.deploy(_knnToken, overrides || {}) as Promise<KannaTreasurer>;
  }
  getDeployTransaction(
    _knnToken: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_knnToken, overrides || {});
  }
  attach(address: string): KannaTreasurer {
    return super.attach(address) as KannaTreasurer;
  }
  connect(signer: Signer): KannaTreasurer__factory {
    return super.connect(signer) as KannaTreasurer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KannaTreasurerInterface {
    return new utils.Interface(_abi) as KannaTreasurerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): KannaTreasurer {
    return new Contract(address, _abi, signerOrProvider) as KannaTreasurer;
  }
}
