/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { KannaYield, KannaYieldInterface } from '../KannaYield';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_knnToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_feeRecipient',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'returnAccount',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    name: 'Collect',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'finalAmount',
        type: 'uint256',
      },
    ],
    name: 'Fee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
    ],
    name: 'Reward',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
    ],
    name: 'RewardAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'subscriptionAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'finalAmount',
        type: 'uint256',
      },
    ],
    name: 'Subscription',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FEE_BASIS_POINT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rewardsDuration',
        type: 'uint256',
      },
    ],
    name: 'addReward',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'holder',
        type: 'address',
      },
    ],
    name: 'calculateReward',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectFees',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'earned',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'endDate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'exit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeRecipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'fees',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'holderRewardPerTokenPaid',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'knnToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'knnYieldPool',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'knnYieldTotalFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastPaymentEvent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastUpdateTime',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolStartDate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rawBalances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'reducedFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardPerToken',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardPerTokenStored',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'started',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'subscriptionAmount',
        type: 'uint256',
      },
    ],
    name: 'subscribe',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'subscriptionFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'tier',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60c06040526040518060a001604052806201518062ffffff16815260200162093a8062ffffff16815260200162278d0062ffffff168152602001624f1a0062ffffff1681526020016276a70062ffffff16815250600890600562000065929190620002f6565b5060146012553480156200007857600080fd5b5060405162002d8e38038062002d8e83398181016040528101906200009e9190620003cb565b620000be620000b26200022a60201b60201c565b6200023260201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050610bb860116000600860006005811062000145576200014462000412565b5b01548152602001908152602001600020819055506101f460116000600860016005811062000178576200017762000412565b5b015481526020019081526020016000208190555060fa601160006008600260058110620001aa57620001a962000412565b5b01548152602001908152602001600020819055506096601160006008600360058110620001dc57620001db62000412565b5b015481526020019081526020016000208190555060646011600060086004600581106200020e576200020d62000412565b5b0154815260200190815260200160002081905550505062000441565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82600581019282156200032f579160200282015b828111156200032e578251829062ffffff169055916020019190600101906200030a565b5b5090506200033e919062000342565b5090565b5b808211156200035d57600081600090555060010162000343565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003938262000366565b9050919050565b620003a58162000386565b8114620003b157600080fd5b50565b600081519050620003c5816200039a565b92915050565b60008060408385031215620003e557620003e462000361565b5b6000620003f585828601620003b4565b92505060206200040885828601620003b4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60805160a0516128f66200049860003960008181610f810152818161151a01526115ac0152600081816108470152818161093101528181610fd70152818161131c015281816114de0152611cf901526128f66000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c806375c93bb911610104578063c8f33c91116100a2578063e9fad8ee11610071578063e9fad8ee14610560578063ee1df50d1461056a578063ee2dd59814610588578063f2fde38b146105a6576101d9565b8063c8f33c91146104d6578063cd3daf9d146104f4578063d82e396214610512578063df136d6514610542576101d9565b80639f1b6c93116100de5780639f1b6c931461045e578063c24a0f8b1461047c578063c5fbf02d1461049a578063c8796572146104b8576101d9565b806375c93bb9146104065780637b0a47ee146104225780638da5cb5b14610440576101d9565b80634a865b261161017c5780636dda34db1161014b5780636dda34db1461037e57806370a08231146103ae578063715018a6146103de578063728ae4b7146103e8576101d9565b80634a865b26146102e25780634acc79ed1461030057806367cff967146103305780636cf5a31f1461034e576101d9565b80630f574ba7116101b85780630f574ba71461025c57806312f9f52d146102785780632e1a7d4d146102a857806346904840146102c4576101d9565b80628cc262146101de5780630aa0a1751461020e5780630cfcfd1e1461022c575b600080fd5b6101f860048036038101906101f3919061203c565b6105c2565b6040516102059190612082565b60405180910390f35b6102166105da565b6040516102239190612082565b60405180910390f35b6102466004803603810190610241919061203c565b6105e0565b6040516102539190612082565b60405180910390f35b610276600480360381019061027191906120c9565b6105f8565b005b610292600480360381019061028d919061203c565b610b8e565b60405161029f9190612082565b60405180910390f35b6102c260048036038101906102bd91906120c9565b610ba6565b005b6102cc610f7f565b6040516102d99190612105565b60405180910390f35b6102ea610fa3565b6040516102f79190612082565b60405180910390f35b61031a600480360381019061031591906120c9565b610fbd565b6040516103279190612082565b60405180910390f35b610338610fd5565b604051610345919061217f565b60405180910390f35b6103686004803603810190610363919061203c565b610ff9565b6040516103759190612082565b60405180910390f35b610398600480360381019061039391906120c9565b611011565b6040516103a59190612082565b60405180910390f35b6103c860048036038101906103c3919061203c565b61102c565b6040516103d59190612082565b60405180910390f35b6103e6611075565b005b6103f0611089565b6040516103fd9190612082565b60405180910390f35b610420600480360381019061041b919061219a565b61108f565b005b61042a611482565b6040516104379190612082565b60405180910390f35b610448611488565b6040516104559190612105565b60405180910390f35b6104666114b1565b6040516104739190612082565b60405180910390f35b6104846114b7565b6040516104919190612082565b60405180910390f35b6104a26114bd565b6040516104af9190612082565b60405180910390f35b6104c06114c3565b6040516104cd9190612082565b60405180910390f35b6104de611636565b6040516104eb9190612082565b60405180910390f35b6104fc61163c565b6040516105099190612082565b60405180910390f35b61052c6004803603810190610527919061203c565b6116a7565b6040516105399190612082565b60405180910390f35b61054a6117a9565b6040516105579190612082565b60405180910390f35b6105686117af565b005b610572611b30565b60405161057f9190612082565b60405180910390f35b610590611b36565b60405161059d9190612082565b60405180910390f35b6105c060048036038101906105bb919061203c565b611b3b565b005b600e6020528060005260406000206000915090505481565b60125481565b60106020528060005260406000206000915090505481565b3361060161163c565b60078190555061060f610fa3565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107bd576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600354811080156106dd57506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b1561072957600354601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610732826116a7565b600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b4260045411610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890612237565b60405180910390fd5b60008211610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b906122a3565b60405180910390fd5b817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161089e9190612105565b60206040518083038186803b1580156108b657600080fd5b505afa1580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee91906122d8565b101561092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092690612351565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161098c93929190612371565b602060405180830381600087803b1580156109a657600080fd5b505af11580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de91906123e0565b5081600160008282546109f1919061243c565b925050819055506000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811480610a4c575060035481105b80610a955750600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483115b15610adf5742601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b2e919061243c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f30c692cd4cbc8cdb1c2478f9202c4f0fe0a2bb212b22d3952c722de5abb62b218460125486604051610b8193929190612492565b60405180910390a2505050565b600f6020528060005260406000206000915090505481565b33610baf61163c565b600781905550610bbd610fa3565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d6b576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060035481108015610c8b57506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b15610cd757600354601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610ce0826116a7565b600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b60008211610dae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da590612515565b60405180910390fd5b81600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2790612351565b60405180910390fd5b8160016000828254610e429190612535565b9250508190555081600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e989190612535565b92505081905550610ee833600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bbf565b5042601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436483604051610f739190612082565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006004544210610fb657600454610fb8565b425b905090565b60116020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600d6020528060005260406000206000915090505481565b6008816005811061102157600080fd5b016000915090505481565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61107d611e03565b6110876000611e81565b565b60015481565b611097611e03565b60006110a161163c565b6007819055506110af610fa3565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461125d576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506003548110801561117d57506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b156111c957600354601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6111d2826116a7565b600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600454824261126c919061243c565b10156112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a4906125db565b60405180910390fd5b60045442106112d45781836112c2919061262a565b60058190555042600381905550611318565b6000426004546112e49190612535565b90506000600554826112f6919061265b565b9050838186611305919061243c565b61130f919061262a565b60058190555050505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113739190612105565b60206040518083038186803b15801561138b57600080fd5b505afa15801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c391906122d8565b905082816113d1919061262a565b6005541115611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140c90612351565b60405180910390fd5b426006819055508242611428919061243c565b6004819055503373ffffffffffffffffffffffffffffffffffffffff167fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29856040516114749190612082565b60405180910390a250505050565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b60045481565b61271081565b60006114cd611e03565b6000600254905060006002819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016115579291906126b5565b602060405180830381600087803b15801561157157600080fd5b505af1158015611585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a991906123e0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1314fd112a381beea61539dbd21ec04afcff2662ac7d1b83273aade1f53d1b97836040516116279190612082565b60405180910390a38091505090565b60065481565b60008060015414156116525760075490506116a4565b600154670de0b6b3a764000060055460065461166c610fa3565b6116769190612535565b611680919061265b565b61168a919061265b565b611694919061262a565b6007546116a1919061243c565b90505b90565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461173a61163c565b6117449190612535565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178e919061265b565b611798919061262a565b6117a2919061243c565b9050919050565b60075481565b336117b861163c565b6007819055506117c6610fa3565b600681905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611974576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506003548110801561189457506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b156118e057600354601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6118e9826116a7565b600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600754600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b6000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000821115611a64576000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160016000828254611a5c9190612535565b925050819055505b6000811115611ac1576000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508082611abe919061243c565b91505b6000821415611ad1575050611b2d565b611adb3383611bbf565b503373ffffffffffffffffffffffffffffffffffffffff167f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc982604051611b229190612082565b60405180910390a250505b50565b60035481565b600a81565b611b43611e03565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611baa90612750565b60405180910390fd5b611bbc81611e81565b50565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c39906127bc565b60405180910390fd5b6000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442611c8f9190612535565b90506000601254611c9f83611f45565b611ca9919061243c565b905060006127108286611cbc919061265b565b611cc6919061262a565b85611cd19190612535565b90508085611cdf9190612535565b60026000828254611cf0919061243c565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87836040518363ffffffff1660e01b8152600401611d529291906126b5565b602060405180830381600087803b158015611d6c57600080fd5b505af1158015611d80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da491906123e0565b508573ffffffffffffffffffffffffffffffffffffffff167f18fa25e22e0f1f39ef2130081363ba86a1259e598e669558683dabfc15bfe731868484604051611def93929190612492565b60405180910390a281935050505092915050565b611e0b611fd1565b73ffffffffffffffffffffffffffffffffffffffff16611e29611488565b73ffffffffffffffffffffffffffffffffffffffff1614611e7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7690612828565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006004544210611f5957600a9050611fcc565b60005b6005811015611fc65760088160058110611f7957611f78612848565b5b0154831015611fb3576011600060088360058110611f9a57611f99612848565b5b0154815260200190815260200160002054915050611fcc565b8080611fbe90612877565b915050611f5c565b50600a90505b919050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061200982611fde565b9050919050565b61201981611ffe565b811461202457600080fd5b50565b60008135905061203681612010565b92915050565b60006020828403121561205257612051611fd9565b5b600061206084828501612027565b91505092915050565b6000819050919050565b61207c81612069565b82525050565b60006020820190506120976000830184612073565b92915050565b6120a681612069565b81146120b157600080fd5b50565b6000813590506120c38161209d565b92915050565b6000602082840312156120df576120de611fd9565b5b60006120ed848285016120b4565b91505092915050565b6120ff81611ffe565b82525050565b600060208201905061211a60008301846120f6565b92915050565b6000819050919050565b600061214561214061213b84611fde565b612120565b611fde565b9050919050565b60006121578261212a565b9050919050565b60006121698261214c565b9050919050565b6121798161215e565b82525050565b60006020820190506121946000830184612170565b92915050565b600080604083850312156121b1576121b0611fd9565b5b60006121bf858286016120b4565b92505060206121d0858286016120b4565b9150509250929050565b600082825260208201905092915050565b7f4e6f2072657761726420617661696c61626c6500000000000000000000000000600082015250565b60006122216013836121da565b915061222c826121eb565b602082019050919050565b6000602082019050818103600083015261225081612214565b9050919050565b7f43616e6e6f74207375627363726962652030204b4e4e00000000000000000000600082015250565b600061228d6016836121da565b915061229882612257565b602082019050919050565b600060208201905081810360008301526122bc81612280565b9050919050565b6000815190506122d28161209d565b92915050565b6000602082840312156122ee576122ed611fd9565b5b60006122fc848285016122c3565b91505092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061233b6014836121da565b915061234682612305565b602082019050919050565b6000602082019050818103600083015261236a8161232e565b9050919050565b600060608201905061238660008301866120f6565b61239360208301856120f6565b6123a06040830184612073565b949350505050565b60008115159050919050565b6123bd816123a8565b81146123c857600080fd5b50565b6000815190506123da816123b4565b92915050565b6000602082840312156123f6576123f5611fd9565b5b6000612404848285016123cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061244782612069565b915061245283612069565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124875761248661240d565b5b828201905092915050565b60006060820190506124a76000830186612073565b6124b46020830185612073565b6124c16040830184612073565b949350505050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b60006124ff600e836121da565b915061250a826124c9565b602082019050919050565b6000602082019050818103600083015261252e816124f2565b9050919050565b600061254082612069565b915061254b83612069565b92508282101561255e5761255d61240d565b5b828203905092915050565b7f43616e6e6f74207265647563652063757272656e74207969656c6420636f6e7460008201527f72616374206475726174696f6e00000000000000000000000000000000000000602082015250565b60006125c5602d836121da565b91506125d082612569565b604082019050919050565b600060208201905081810360008301526125f4816125b8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061263582612069565b915061264083612069565b9250826126505761264f6125fb565b5b828204905092915050565b600061266682612069565b915061267183612069565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126aa576126a961240d565b5b828202905092915050565b60006040820190506126ca60008301856120f6565b6126d76020830184612073565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061273a6026836121da565b9150612745826126de565b604082019050919050565b600060208201905081810360008301526127698161272d565b9050919050565b7f4e6f7420696e20706f6f6c000000000000000000000000000000000000000000600082015250565b60006127a6600b836121da565b91506127b182612770565b602082019050919050565b600060208201905081810360008301526127d581612799565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006128126020836121da565b915061281d826127dc565b602082019050919050565b6000602082019050818103600083015261284181612805565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061288282612069565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128b5576128b461240d565b5b60018201905091905056fea26469706673582212201f998f9b6f6e449a53a912f626fb09565d8850e2958a6c2123cd2adc1ccb307d64736f6c63430008090033';

export class KannaYield__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _knnToken: string,
    _feeRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<KannaYield> {
    return super.deploy(
      _knnToken,
      _feeRecipient,
      overrides || {},
    ) as Promise<KannaYield>;
  }
  getDeployTransaction(
    _knnToken: string,
    _feeRecipient: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _knnToken,
      _feeRecipient,
      overrides || {},
    );
  }
  attach(address: string): KannaYield {
    return super.attach(address) as KannaYield;
  }
  connect(signer: Signer): KannaYield__factory {
    return super.connect(signer) as KannaYield__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KannaYieldInterface {
    return new utils.Interface(_abi) as KannaYieldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): KannaYield {
    return new Contract(address, _abi, signerOrProvider) as KannaYield;
  }
}
